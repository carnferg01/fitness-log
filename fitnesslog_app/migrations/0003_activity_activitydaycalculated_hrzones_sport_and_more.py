# Generated by Django 5.2.4 on 2025-07-10 16:02

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('fitnesslog_app', '0002_rename_gearsummary_gearcalculated'),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('datetime_added', models.DateTimeField(auto_now_add=True)),
                ('activity_type', models.CharField(max_length=100)),
                ('locations', models.TextField(blank=True)),
                ('intensity', models.PositiveSmallIntegerField(choices=[(1, 'Leisure'), (2, 'Very easy'), (3, 'Easy'), (4, 'Steady'), (5, 'Moderate'), (6, 'Brisk'), (7, 'Quick'), (8, 'Hard'), (9, 'Very hard'), (10, 'Max')])),
                ('feeling', models.PositiveSmallIntegerField(choices=[(1, 'Awful (really should not have done this)'), (2, 'Bad'), (3, 'Grim (having 2nd thoughts)'), (4, 'Not great'), (5, 'A little hard'), (6, 'Neutral'), (7, 'Reasonable'), (8, 'Great'), (9, 'Energised'), (10, 'Incredible')])),
                ('terrain', models.CharField(blank=True, max_length=100)),
                ('note', models.TextField(blank=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('start_timezone', models.CharField(default='UTC', max_length=100)),
                ('elapsed_time', models.DurationField(blank=True, null=True)),
                ('tracked_time', models.DurationField(blank=True, null=True)),
                ('moving_time', models.DurationField(blank=True, null=True)),
                ('distance', models.FloatField(blank=True, null=True)),
                ('elevation_gain', models.FloatField(blank=True, null=True)),
                ('elevation_loss', models.FloatField(blank=True, null=True)),
                ('elevation_max', models.FloatField(blank=True, null=True)),
                ('elevation_min', models.FloatField(blank=True, null=True)),
                ('time_at_HR', models.TextField(blank=True)),
                ('time_at_pace', models.TextField(blank=True)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('gear', models.ManyToManyField(blank=True, related_name='activities', to='fitnesslog_app.gear')),
            ],
        ),
        migrations.CreateModel(
            name='ActivityDayCalculated',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('load', models.FloatField()),
                ('time_in_HR_detailed', models.TextField(blank=True)),
                ('time_in_HR_zones', models.TextField(blank=True)),
                ('time_at_pace', models.TextField(blank=True)),
                ('total_distance', models.FloatField(default=0.0)),
                ('total_climb', models.FloatField(default=0.0)),
                ('total_session_count', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='HRzones',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('zones', models.JSONField(default=dict)),
                ('zone_multipliers', models.JSONField(default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Sport',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('colour', models.CharField(default='#000000', max_length=7)),
                ('description', models.TextField(blank=True)),
                ('impact', models.BooleanField()),
            ],
        ),
        migrations.AlterField(
            model_name='gearcalculated',
            name='gear',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calculated', to='fitnesslog_app.gear'),
        ),
        migrations.CreateModel(
            name='ActivityCalculated',
            fields=[
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='calculated', serialize=False, to='fitnesslog_app.activity')),
                ('last_calculated', models.DateTimeField(auto_now=True)),
                ('load', models.FloatField()),
                ('time_in_HR_detailed', models.TextField(blank=True)),
                ('time_in_HR_zones', models.TextField(blank=True)),
                ('time_at_pace', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='ActivityAuto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('start_latitude', models.FloatField(blank=True, null=True)),
                ('start_longitude', models.FloatField(blank=True, null=True)),
                ('start_datetime', models.DateTimeField()),
                ('start_timezone', models.CharField(default='UTC', max_length=100)),
                ('elapsed_time', models.DurationField()),
                ('tracked_time', models.DurationField()),
                ('moving_time', models.DurationField()),
                ('distance', models.FloatField(blank=True, null=True)),
                ('elevation_gain', models.FloatField(blank=True, null=True)),
                ('elevation_loss', models.FloatField(blank=True, null=True)),
                ('elevation_max', models.FloatField(blank=True, null=True)),
                ('elevation_min', models.FloatField(blank=True, null=True)),
                ('time_at_HR', models.TextField(blank=True)),
                ('time_at_pace', models.TextField(blank=True)),
                ('best_sustained_pace', models.FloatField(blank=True, null=True)),
                ('device', models.CharField(blank=True, max_length=100)),
                ('weather', models.CharField(blank=True, max_length=100)),
                ('calories', models.IntegerField(blank=True, null=True)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='auto', to='fitnesslog_app.activity')),
            ],
        ),
        migrations.CreateModel(
            name='OrienteeringProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('controls_found', models.IntegerField(default=0)),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='orienteering_profile', to='fitnesslog_app.activity')),
            ],
        ),
        migrations.CreateModel(
            name='SimplifiedTraceCoordinates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('timestamp', models.DateTimeField()),
                ('activity', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='simplified_trace', to='fitnesslog_app.activity')),
            ],
        ),
        migrations.AddField(
            model_name='activity',
            name='sport',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='fitnesslog_app.sport'),
        ),
    ]
